using Content.Client.Message;
using Content.Client.UserInterface.Controls;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client._FTL.Economy;

[GenerateTypedNameReferences]
public sealed partial class PdaAtmUiWindow : FancyWindow
{
    public event Action? OnWithdrawRequest;
    public event Action? OnDepositRequest;
    public int Amount;

    public PdaAtmUiWindow(IdAtmBoundUserInterface ui, EntityUid entity)
    {
        RobustXamlLoader.Load(this);
        AmountEdit.OnValueChanged += val =>
        {
            Amount = val;
        };
        WithdrawButton.OnPressed += _ =>
        {
            WithdrawMenu.Visible = false;
            ConfirmWithdrawMenu.Visible = true;
            ConfirmWithdrawalMessage.SetMarkup(Loc.GetString("credit-app-ui-withdraw-review-message", ("credits", Amount)));
        };
        ConfirmWithdrawButton.OnPressed += _ =>
        {
            ConfirmWithdrawMenu.Visible = false;
            SuccessMenu.Visible = true;
            OnWithdrawRequest?.Invoke();
        };

        // cancel
        CancelDeposit.OnPressed += _ =>
        {
            DepositMenu.Visible = false;
            RequestMenu.Visible = true;
        };
        CancelWithdrawal.OnPressed += _ =>
        {
            WithdrawMenu.Visible = false;
            RequestMenu.Visible = true;
        };
        ConfirmCancelWithdrawal.OnPressed += _ =>
        {
            WithdrawMenu.Visible = true;
            ConfirmWithdrawMenu.Visible = false;
        };

        // request
        RequestDeposit.OnPressed += _ =>
        {
            DepositMenu.Visible = true;
            RequestMenu.Visible = false;
        };
        RequestWithdraw.OnPressed += _ =>
        {
            WithdrawMenu.Visible = true;
            RequestMenu.Visible = false;
        };

        // deposit
        DepositButton.OnPressed += _ =>
        {
            DepositMenu.Visible = false;
            SuccessMenu.Visible = true;
            OnDepositRequest?.Invoke();
        };

        // success
        CloseSuccessMenu.OnPressed += _ =>
        {
            RequestMenu.Visible = true;
            SuccessMenu.Visible = false;
        };

        // text and other
        DepositWarning.SetMarkup(Loc.GetString("credit-app-ui-deposit-review-message"));
        NoIdCardMessage.SetMarkup(Loc.GetString("credit-app-ui-error-no-id"));
        ConfirmCancelWithdrawal.AddStyleClass("ButtonColorRed");
        CancelWithdrawal.AddStyleClass("ButtonColorRed");
        CancelDeposit.AddStyleClass("ButtonColorRed");
    }

    public void SetWelcomeMessage(string name, int credits)
    {
        WelcomeMessage.SetMarkup(Loc.GetString("credit-app-ui-welcome-message", ("name", name), ("credits", credits)));
    }

    public void SetDisabledWithdrawButton(bool disabled)
    {
        RequestWithdraw.Disabled = disabled;
    }

    public void SetDisabledDepositButton(bool disabled)
    {
        RequestDeposit.Disabled = disabled;
    }

    public void SetVisibleNoId(bool visible)
    {
        NoIdCard.Visible = visible;
        WithIdCard.Visible = !visible;
    }

    public void SetMaxValueSlider(int maxValue)
    {
        AmountEdit.MaxValue = maxValue;
    }
}
