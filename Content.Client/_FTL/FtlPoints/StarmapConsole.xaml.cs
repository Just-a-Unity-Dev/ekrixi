using System.Numerics;
using Content.Client.UserInterface.Controls;
using Content.Shared._FTL.FtlPoints;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;

namespace Content.Client._FTL.FtlPoints;

[GenerateTypedNameReferences]
public sealed partial class StarmapConsole : FancyWindow
{
    private readonly StarmapConsoleBoundUserInterface _owner;
    private IPrototypeManager _protoManager;

    private const float Ppd = 10f;

    public StarmapConsole(StarmapConsoleBoundUserInterface owner, IPrototypeManager protoManager)
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        _owner = owner;

        _protoManager = protoManager;
        Title = Loc.GetString("es-computer-title");
    }

    public void UpdateState(StarmapConsoleBoundUserInterfaceState state)
    {
        UpdateStars(state.Stars);
    }

    private void UpdateStars(List<Star> stars)
    {
        Stars.RemoveAllChildren();
        foreach (var star in stars)
        {
            var button = new Button
            {
                Text = star.Name,
                MinSize = new Vector2(25, 25),
                MaxSize = new Vector2(25, 25),
            };
            button.OnPressed += args => { };
            Stars.AddChild(button);
            LayoutContainer.SetPosition(button, (
                    star.Position - new Vector2(25f / 2f, 25f / 2f) // center star
                ) * Ppd
            );
            Logger.Info("added");
        }
    }
}
